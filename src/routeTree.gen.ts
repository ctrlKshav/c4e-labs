/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const ContactLazyImport = createFileRoute('/contact')()
const ComingSoonLazyImport = createFileRoute('/coming-soon')()
const ProductsIndexLazyImport = createFileRoute('/products/')()
const ProductsShopifyPluginsLazyImport = createFileRoute(
  '/products/shopify-plugins',
)()
const ProductsSaasLazyImport = createFileRoute('/products/saas')()
const ProductsOthersLazyImport = createFileRoute('/products/others')()

// Create/Update Routes

const ContactLazyRoute = ContactLazyImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contact.lazy').then((d) => d.Route))

const ComingSoonLazyRoute = ComingSoonLazyImport.update({
  id: '/coming-soon',
  path: '/coming-soon',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/coming-soon.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductsIndexLazyRoute = ProductsIndexLazyImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/products/index.lazy').then((d) => d.Route),
)

const ProductsShopifyPluginsLazyRoute = ProductsShopifyPluginsLazyImport.update(
  {
    id: '/products/shopify-plugins',
    path: '/products/shopify-plugins',
    getParentRoute: () => rootRoute,
  } as any,
).lazy(() =>
  import('./routes/products/shopify-plugins.lazy').then((d) => d.Route),
)

const ProductsSaasLazyRoute = ProductsSaasLazyImport.update({
  id: '/products/saas',
  path: '/products/saas',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/products/saas.lazy').then((d) => d.Route))

const ProductsOthersLazyRoute = ProductsOthersLazyImport.update({
  id: '/products/others',
  path: '/products/others',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/products/others.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/coming-soon': {
      id: '/coming-soon'
      path: '/coming-soon'
      fullPath: '/coming-soon'
      preLoaderRoute: typeof ComingSoonLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactLazyImport
      parentRoute: typeof rootRoute
    }
    '/products/others': {
      id: '/products/others'
      path: '/products/others'
      fullPath: '/products/others'
      preLoaderRoute: typeof ProductsOthersLazyImport
      parentRoute: typeof rootRoute
    }
    '/products/saas': {
      id: '/products/saas'
      path: '/products/saas'
      fullPath: '/products/saas'
      preLoaderRoute: typeof ProductsSaasLazyImport
      parentRoute: typeof rootRoute
    }
    '/products/shopify-plugins': {
      id: '/products/shopify-plugins'
      path: '/products/shopify-plugins'
      fullPath: '/products/shopify-plugins'
      preLoaderRoute: typeof ProductsShopifyPluginsLazyImport
      parentRoute: typeof rootRoute
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/coming-soon': typeof ComingSoonLazyRoute
  '/contact': typeof ContactLazyRoute
  '/products/others': typeof ProductsOthersLazyRoute
  '/products/saas': typeof ProductsSaasLazyRoute
  '/products/shopify-plugins': typeof ProductsShopifyPluginsLazyRoute
  '/products': typeof ProductsIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/coming-soon': typeof ComingSoonLazyRoute
  '/contact': typeof ContactLazyRoute
  '/products/others': typeof ProductsOthersLazyRoute
  '/products/saas': typeof ProductsSaasLazyRoute
  '/products/shopify-plugins': typeof ProductsShopifyPluginsLazyRoute
  '/products': typeof ProductsIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/coming-soon': typeof ComingSoonLazyRoute
  '/contact': typeof ContactLazyRoute
  '/products/others': typeof ProductsOthersLazyRoute
  '/products/saas': typeof ProductsSaasLazyRoute
  '/products/shopify-plugins': typeof ProductsShopifyPluginsLazyRoute
  '/products/': typeof ProductsIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/coming-soon'
    | '/contact'
    | '/products/others'
    | '/products/saas'
    | '/products/shopify-plugins'
    | '/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/coming-soon'
    | '/contact'
    | '/products/others'
    | '/products/saas'
    | '/products/shopify-plugins'
    | '/products'
  id:
    | '__root__'
    | '/'
    | '/coming-soon'
    | '/contact'
    | '/products/others'
    | '/products/saas'
    | '/products/shopify-plugins'
    | '/products/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ComingSoonLazyRoute: typeof ComingSoonLazyRoute
  ContactLazyRoute: typeof ContactLazyRoute
  ProductsOthersLazyRoute: typeof ProductsOthersLazyRoute
  ProductsSaasLazyRoute: typeof ProductsSaasLazyRoute
  ProductsShopifyPluginsLazyRoute: typeof ProductsShopifyPluginsLazyRoute
  ProductsIndexLazyRoute: typeof ProductsIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ComingSoonLazyRoute: ComingSoonLazyRoute,
  ContactLazyRoute: ContactLazyRoute,
  ProductsOthersLazyRoute: ProductsOthersLazyRoute,
  ProductsSaasLazyRoute: ProductsSaasLazyRoute,
  ProductsShopifyPluginsLazyRoute: ProductsShopifyPluginsLazyRoute,
  ProductsIndexLazyRoute: ProductsIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/coming-soon",
        "/contact",
        "/products/others",
        "/products/saas",
        "/products/shopify-plugins",
        "/products/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/coming-soon": {
      "filePath": "coming-soon.lazy.tsx"
    },
    "/contact": {
      "filePath": "contact.lazy.tsx"
    },
    "/products/others": {
      "filePath": "products/others.lazy.tsx"
    },
    "/products/saas": {
      "filePath": "products/saas.lazy.tsx"
    },
    "/products/shopify-plugins": {
      "filePath": "products/shopify-plugins.lazy.tsx"
    },
    "/products/": {
      "filePath": "products/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
